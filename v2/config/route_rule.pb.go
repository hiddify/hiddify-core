// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: v2/config/route_rule.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Outbound int32

const (
	Outbound_proxy                Outbound = 0
	Outbound_direct               Outbound = 1
	Outbound_direct_with_fragment Outbound = 2
	Outbound_block                Outbound = 3
)

// Enum value maps for Outbound.
var (
	Outbound_name = map[int32]string{
		0: "proxy",
		1: "direct",
		2: "direct_with_fragment",
		3: "block",
	}
	Outbound_value = map[string]int32{
		"proxy":                0,
		"direct":               1,
		"direct_with_fragment": 2,
		"block":                3,
	}
)

func (x Outbound) Enum() *Outbound {
	p := new(Outbound)
	*p = x
	return p
}

func (x Outbound) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Outbound) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_config_route_rule_proto_enumTypes[0].Descriptor()
}

func (Outbound) Type() protoreflect.EnumType {
	return &file_v2_config_route_rule_proto_enumTypes[0]
}

func (x Outbound) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Outbound.Descriptor instead.
func (Outbound) EnumDescriptor() ([]byte, []int) {
	return file_v2_config_route_rule_proto_rawDescGZIP(), []int{0}
}

type Network int32

const (
	Network_all Network = 0
	Network_tcp Network = 1
	Network_udp Network = 2
)

// Enum value maps for Network.
var (
	Network_name = map[int32]string{
		0: "all",
		1: "tcp",
		2: "udp",
	}
	Network_value = map[string]int32{
		"all": 0,
		"tcp": 1,
		"udp": 2,
	}
)

func (x Network) Enum() *Network {
	p := new(Network)
	*p = x
	return p
}

func (x Network) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Network) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_config_route_rule_proto_enumTypes[1].Descriptor()
}

func (Network) Type() protoreflect.EnumType {
	return &file_v2_config_route_rule_proto_enumTypes[1]
}

func (x Network) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Network.Descriptor instead.
func (Network) EnumDescriptor() ([]byte, []int) {
	return file_v2_config_route_rule_proto_rawDescGZIP(), []int{1}
}

type Protocol int32

const (
	Protocol_tls        Protocol = 0
	Protocol_http       Protocol = 1
	Protocol_quic       Protocol = 2
	Protocol_stun       Protocol = 3
	Protocol_dns        Protocol = 4
	Protocol_bittorrent Protocol = 5
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "tls",
		1: "http",
		2: "quic",
		3: "stun",
		4: "dns",
		5: "bittorrent",
	}
	Protocol_value = map[string]int32{
		"tls":        0,
		"http":       1,
		"quic":       2,
		"stun":       3,
		"dns":        4,
		"bittorrent": 5,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_config_route_rule_proto_enumTypes[2].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_v2_config_route_rule_proto_enumTypes[2]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_v2_config_route_rule_proto_rawDescGZIP(), []int{2}
}

type RouteRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*Rule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *RouteRule) Reset() {
	*x = RouteRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_config_route_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteRule) ProtoMessage() {}

func (x *RouteRule) ProtoReflect() protoreflect.Message {
	mi := &file_v2_config_route_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteRule.ProtoReflect.Descriptor instead.
func (*RouteRule) Descriptor() ([]byte, []int) {
	return file_v2_config_route_rule_proto_rawDescGZIP(), []int{0}
}

func (x *RouteRule) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOrder        uint32     `protobuf:"varint,1,opt,name=list_order,proto3" json:"list_order,omitempty"`
	Enabled          bool       `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Name             string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Outbound         Outbound   `protobuf:"varint,4,opt,name=outbound,proto3,enum=config.Outbound" json:"outbound,omitempty"`
	RuleSets         []string   `protobuf:"bytes,5,rep,name=rule_sets,json=rule_set,proto3" json:"rule_sets,omitempty"`
	PackageNames     []string   `protobuf:"bytes,6,rep,name=package_names,json=package_name,proto3" json:"package_names,omitempty"`
	ProcessNames     []string   `protobuf:"bytes,7,rep,name=process_names,json=process_name,proto3" json:"process_names,omitempty"`
	ProcessPaths     []string   `protobuf:"bytes,8,rep,name=process_paths,json=process_path,proto3" json:"process_paths,omitempty"`
	Network          Network    `protobuf:"varint,9,opt,name=network,proto3,enum=config.Network" json:"network,omitempty"`
	PortRanges       []string   `protobuf:"bytes,10,rep,name=port_ranges,json=port_range,proto3" json:"port_ranges,omitempty"`
	SourcePortRanges []string   `protobuf:"bytes,11,rep,name=source_port_ranges,json=source_port_range,proto3" json:"source_port_ranges,omitempty"`
	Protocols        []Protocol `protobuf:"varint,12,rep,packed,name=protocols,json=protocol,proto3,enum=config.Protocol" json:"protocols,omitempty"`
	IpCidrs          []string   `protobuf:"bytes,13,rep,name=ip_cidrs,json=ip_cidr,proto3" json:"ip_cidrs,omitempty"`
	SourceIpCidrs    []string   `protobuf:"bytes,14,rep,name=source_ip_cidrs,json=source_ip_cidr,proto3" json:"source_ip_cidrs,omitempty"`
	Domains          []string   `protobuf:"bytes,15,rep,name=domains,json=domain,proto3" json:"domains,omitempty"`
	DomainSuffixes   []string   `protobuf:"bytes,16,rep,name=domain_suffixes,json=domain_suffix,proto3" json:"domain_suffixes,omitempty"`
	DomainKeywords   []string   `protobuf:"bytes,17,rep,name=domain_keywords,json=domain_keyword,proto3" json:"domain_keywords,omitempty"`
	DomainRegexes    []string   `protobuf:"bytes,18,rep,name=domain_regexes,json=domain_regex,proto3" json:"domain_regexes,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_config_route_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_v2_config_route_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_v2_config_route_rule_proto_rawDescGZIP(), []int{1}
}

func (x *Rule) GetListOrder() uint32 {
	if x != nil {
		return x.ListOrder
	}
	return 0
}

func (x *Rule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rule) GetOutbound() Outbound {
	if x != nil {
		return x.Outbound
	}
	return Outbound_proxy
}

func (x *Rule) GetRuleSets() []string {
	if x != nil {
		return x.RuleSets
	}
	return nil
}

func (x *Rule) GetPackageNames() []string {
	if x != nil {
		return x.PackageNames
	}
	return nil
}

func (x *Rule) GetProcessNames() []string {
	if x != nil {
		return x.ProcessNames
	}
	return nil
}

func (x *Rule) GetProcessPaths() []string {
	if x != nil {
		return x.ProcessPaths
	}
	return nil
}

func (x *Rule) GetNetwork() Network {
	if x != nil {
		return x.Network
	}
	return Network_all
}

func (x *Rule) GetPortRanges() []string {
	if x != nil {
		return x.PortRanges
	}
	return nil
}

func (x *Rule) GetSourcePortRanges() []string {
	if x != nil {
		return x.SourcePortRanges
	}
	return nil
}

func (x *Rule) GetProtocols() []Protocol {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *Rule) GetIpCidrs() []string {
	if x != nil {
		return x.IpCidrs
	}
	return nil
}

func (x *Rule) GetSourceIpCidrs() []string {
	if x != nil {
		return x.SourceIpCidrs
	}
	return nil
}

func (x *Rule) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *Rule) GetDomainSuffixes() []string {
	if x != nil {
		return x.DomainSuffixes
	}
	return nil
}

func (x *Rule) GetDomainKeywords() []string {
	if x != nil {
		return x.DomainKeywords
	}
	return nil
}

func (x *Rule) GetDomainRegexes() []string {
	if x != nil {
		return x.DomainRegexes
	}
	return nil
}

var File_v2_config_route_rule_proto protoreflect.FileDescriptor

var file_v2_config_route_rule_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x2f, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x8c, 0x05, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x70, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x70, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x5f,
	0x63, 0x69, 0x64, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a,
	0x0f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x65, 0x73,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x73,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73,
	0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x67, 0x65, 0x78, 0x2a, 0x46, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x09, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x03, 0x2a, 0x24, 0x0a, 0x07,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x75, 0x64, 0x70,
	0x10, 0x02, 0x2a, 0x4a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x07,
	0x0a, 0x03, 0x74, 0x6c, 0x73, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x71, 0x75, 0x69, 0x63, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x73,
	0x74, 0x75, 0x6e, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x62, 0x69, 0x74, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x05, 0x42, 0x4b,
	0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x69, 0x64,
	0x64, 0x69, 0x66, 0x79, 0x2f, 0x68, 0x69, 0x64, 0x64, 0x69, 0x66, 0x79, 0x2d, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_v2_config_route_rule_proto_rawDescOnce sync.Once
	file_v2_config_route_rule_proto_rawDescData = file_v2_config_route_rule_proto_rawDesc
)

func file_v2_config_route_rule_proto_rawDescGZIP() []byte {
	file_v2_config_route_rule_proto_rawDescOnce.Do(func() {
		file_v2_config_route_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_v2_config_route_rule_proto_rawDescData)
	})
	return file_v2_config_route_rule_proto_rawDescData
}

var file_v2_config_route_rule_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_v2_config_route_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v2_config_route_rule_proto_goTypes = []any{
	(Outbound)(0),     // 0: config.Outbound
	(Network)(0),      // 1: config.Network
	(Protocol)(0),     // 2: config.Protocol
	(*RouteRule)(nil), // 3: config.RouteRule
	(*Rule)(nil),      // 4: config.Rule
}
var file_v2_config_route_rule_proto_depIdxs = []int32{
	4, // 0: config.RouteRule.rules:type_name -> config.Rule
	0, // 1: config.Rule.outbound:type_name -> config.Outbound
	1, // 2: config.Rule.network:type_name -> config.Network
	2, // 3: config.Rule.protocols:type_name -> config.Protocol
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_v2_config_route_rule_proto_init() }
func file_v2_config_route_rule_proto_init() {
	if File_v2_config_route_rule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v2_config_route_rule_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RouteRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_config_route_rule_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_config_route_rule_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v2_config_route_rule_proto_goTypes,
		DependencyIndexes: file_v2_config_route_rule_proto_depIdxs,
		EnumInfos:         file_v2_config_route_rule_proto_enumTypes,
		MessageInfos:      file_v2_config_route_rule_proto_msgTypes,
	}.Build()
	File_v2_config_route_rule_proto = out.File
	file_v2_config_route_rule_proto_rawDesc = nil
	file_v2_config_route_rule_proto_goTypes = nil
	file_v2_config_route_rule_proto_depIdxs = nil
}
